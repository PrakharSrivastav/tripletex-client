// Code generated by go-swagger; DO NOT EDIT.

package entitlement

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPutEmployeeEntitlementGrantClientEntitlementsByTemplateParams creates a new PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams object
// with the default values initialized.
func NewPutEmployeeEntitlementGrantClientEntitlementsByTemplateParams() *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams {
	var (
		addToExistingDefault = bool(false)
	)
	return &PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams{
		AddToExisting: &addToExistingDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewPutEmployeeEntitlementGrantClientEntitlementsByTemplateParamsWithTimeout creates a new PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutEmployeeEntitlementGrantClientEntitlementsByTemplateParamsWithTimeout(timeout time.Duration) *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams {
	var (
		addToExistingDefault = bool(false)
	)
	return &PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams{
		AddToExisting: &addToExistingDefault,

		timeout: timeout,
	}
}

// NewPutEmployeeEntitlementGrantClientEntitlementsByTemplateParamsWithContext creates a new PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutEmployeeEntitlementGrantClientEntitlementsByTemplateParamsWithContext(ctx context.Context) *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams {
	var (
		addToExistingDefault = bool(false)
	)
	return &PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams{
		AddToExisting: &addToExistingDefault,

		Context: ctx,
	}
}

// NewPutEmployeeEntitlementGrantClientEntitlementsByTemplateParamsWithHTTPClient creates a new PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutEmployeeEntitlementGrantClientEntitlementsByTemplateParamsWithHTTPClient(client *http.Client) *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams {
	var (
		addToExistingDefault = bool(false)
	)
	return &PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams{
		AddToExisting: &addToExistingDefault,
		HTTPClient:    client,
	}
}

/*PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams contains all the parameters to send to the API endpoint
for the put employee entitlement grant client entitlements by template operation typically these are written to a http.Request
*/
type PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams struct {

	/*AddToExisting
	  Add template to existing entitlements

	*/
	AddToExisting *bool
	/*CustomerID
	  Client ID

	*/
	CustomerID int32
	/*EmployeeID
	  Employee ID

	*/
	EmployeeID int32
	/*Template
	  Template

	*/
	Template string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put employee entitlement grant client entitlements by template params
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) WithTimeout(timeout time.Duration) *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put employee entitlement grant client entitlements by template params
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put employee entitlement grant client entitlements by template params
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) WithContext(ctx context.Context) *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put employee entitlement grant client entitlements by template params
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put employee entitlement grant client entitlements by template params
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) WithHTTPClient(client *http.Client) *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put employee entitlement grant client entitlements by template params
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddToExisting adds the addToExisting to the put employee entitlement grant client entitlements by template params
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) WithAddToExisting(addToExisting *bool) *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams {
	o.SetAddToExisting(addToExisting)
	return o
}

// SetAddToExisting adds the addToExisting to the put employee entitlement grant client entitlements by template params
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) SetAddToExisting(addToExisting *bool) {
	o.AddToExisting = addToExisting
}

// WithCustomerID adds the customerID to the put employee entitlement grant client entitlements by template params
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) WithCustomerID(customerID int32) *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams {
	o.SetCustomerID(customerID)
	return o
}

// SetCustomerID adds the customerId to the put employee entitlement grant client entitlements by template params
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) SetCustomerID(customerID int32) {
	o.CustomerID = customerID
}

// WithEmployeeID adds the employeeID to the put employee entitlement grant client entitlements by template params
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) WithEmployeeID(employeeID int32) *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams {
	o.SetEmployeeID(employeeID)
	return o
}

// SetEmployeeID adds the employeeId to the put employee entitlement grant client entitlements by template params
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) SetEmployeeID(employeeID int32) {
	o.EmployeeID = employeeID
}

// WithTemplate adds the template to the put employee entitlement grant client entitlements by template params
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) WithTemplate(template string) *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams {
	o.SetTemplate(template)
	return o
}

// SetTemplate adds the template to the put employee entitlement grant client entitlements by template params
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) SetTemplate(template string) {
	o.Template = template
}

// WriteToRequest writes these params to a swagger request
func (o *PutEmployeeEntitlementGrantClientEntitlementsByTemplateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AddToExisting != nil {

		// query param addToExisting
		var qrAddToExisting bool
		if o.AddToExisting != nil {
			qrAddToExisting = *o.AddToExisting
		}
		qAddToExisting := swag.FormatBool(qrAddToExisting)
		if qAddToExisting != "" {
			if err := r.SetQueryParam("addToExisting", qAddToExisting); err != nil {
				return err
			}
		}

	}

	// query param customerId
	qrCustomerID := o.CustomerID
	qCustomerID := swag.FormatInt32(qrCustomerID)
	if qCustomerID != "" {
		if err := r.SetQueryParam("customerId", qCustomerID); err != nil {
			return err
		}
	}

	// query param employeeId
	qrEmployeeID := o.EmployeeID
	qEmployeeID := swag.FormatInt32(qrEmployeeID)
	if qEmployeeID != "" {
		if err := r.SetQueryParam("employeeId", qEmployeeID); err != nil {
			return err
		}
	}

	// query param template
	qrTemplate := o.Template
	qTemplate := qrTemplate
	if qTemplate != "" {
		if err := r.SetQueryParam("template", qTemplate); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
