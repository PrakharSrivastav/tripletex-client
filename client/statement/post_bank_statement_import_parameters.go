// Code generated by go-swagger; DO NOT EDIT.

package statement

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostBankStatementImportParams creates a new PostBankStatementImportParams object
// with the default values initialized.
func NewPostBankStatementImportParams() *PostBankStatementImportParams {
	var ()
	return &PostBankStatementImportParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostBankStatementImportParamsWithTimeout creates a new PostBankStatementImportParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostBankStatementImportParamsWithTimeout(timeout time.Duration) *PostBankStatementImportParams {
	var ()
	return &PostBankStatementImportParams{

		timeout: timeout,
	}
}

// NewPostBankStatementImportParamsWithContext creates a new PostBankStatementImportParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostBankStatementImportParamsWithContext(ctx context.Context) *PostBankStatementImportParams {
	var ()
	return &PostBankStatementImportParams{

		Context: ctx,
	}
}

// NewPostBankStatementImportParamsWithHTTPClient creates a new PostBankStatementImportParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostBankStatementImportParamsWithHTTPClient(client *http.Client) *PostBankStatementImportParams {
	var ()
	return &PostBankStatementImportParams{
		HTTPClient: client,
	}
}

/*PostBankStatementImportParams contains all the parameters to send to the API endpoint
for the post bank statement import operation typically these are written to a http.Request
*/
type PostBankStatementImportParams struct {

	/*BankID
	  Bank ID

	*/
	BankID *int32
	/*File
	  The bank statement file

	*/
	File runtime.NamedReadCloser
	/*FileFormat
	  File format

	*/
	FileFormat string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post bank statement import params
func (o *PostBankStatementImportParams) WithTimeout(timeout time.Duration) *PostBankStatementImportParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post bank statement import params
func (o *PostBankStatementImportParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post bank statement import params
func (o *PostBankStatementImportParams) WithContext(ctx context.Context) *PostBankStatementImportParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post bank statement import params
func (o *PostBankStatementImportParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post bank statement import params
func (o *PostBankStatementImportParams) WithHTTPClient(client *http.Client) *PostBankStatementImportParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post bank statement import params
func (o *PostBankStatementImportParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBankID adds the bankID to the post bank statement import params
func (o *PostBankStatementImportParams) WithBankID(bankID *int32) *PostBankStatementImportParams {
	o.SetBankID(bankID)
	return o
}

// SetBankID adds the bankId to the post bank statement import params
func (o *PostBankStatementImportParams) SetBankID(bankID *int32) {
	o.BankID = bankID
}

// WithFile adds the file to the post bank statement import params
func (o *PostBankStatementImportParams) WithFile(file runtime.NamedReadCloser) *PostBankStatementImportParams {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the post bank statement import params
func (o *PostBankStatementImportParams) SetFile(file runtime.NamedReadCloser) {
	o.File = file
}

// WithFileFormat adds the fileFormat to the post bank statement import params
func (o *PostBankStatementImportParams) WithFileFormat(fileFormat string) *PostBankStatementImportParams {
	o.SetFileFormat(fileFormat)
	return o
}

// SetFileFormat adds the fileFormat to the post bank statement import params
func (o *PostBankStatementImportParams) SetFileFormat(fileFormat string) {
	o.FileFormat = fileFormat
}

// WriteToRequest writes these params to a swagger request
func (o *PostBankStatementImportParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BankID != nil {

		// query param bankId
		var qrBankID int32
		if o.BankID != nil {
			qrBankID = *o.BankID
		}
		qBankID := swag.FormatInt32(qrBankID)
		if qBankID != "" {
			if err := r.SetQueryParam("bankId", qBankID); err != nil {
				return err
			}
		}

	}

	// form file param file
	if err := r.SetFileParam("file", o.File); err != nil {
		return err
	}

	// query param fileFormat
	qrFileFormat := o.FileFormat
	qFileFormat := qrFileFormat
	if qFileFormat != "" {
		if err := r.SetQueryParam("fileFormat", qFileFormat); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
